/*
 * Java domain class for entity "HomePositionMaster" 
 * Created on 2023-01-10 ( Date ISO 2023-01-10 - Time 16:18:09 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
 
 /*
 * Created on 2023-01-10 ( 16:18:09 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.3.0
 */


package com.maan.Madison.repository;

import java.util.List;
import java.util.Map;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.JpaSpecificationExecutor;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.maan.Madison.entity.HomePositionMaster;
import com.maan.Madison.entity.HomePositionMasterId;
/**
 * <h2>HomePositionMasterRepository</h2>
 *
 * createdAt : 2023-01-10 - Time 16:18:09
 * <p>
 * Description: "HomePositionMaster" Repository
 */
 
 

@Repository
public interface HomePositionMasterRepository  extends JpaRepository<HomePositionMaster,HomePositionMasterId > , JpaSpecificationExecutor<HomePositionMaster> {

	HomePositionMaster findByApplicationNo(Long applicationNo);

	@Query(value = "SELECT SUM( DECODE(CURRENCY_ID,'USD',NVL (A.USD_PREMIUM, '0'), NVL (A.PREMIUM, '0'))) PREMIUM FROM  MOTOR_POLICY_COVER_DATA A WHERE APPLICATION_NO=? AND A.AMEND_ID = (SELECT MAX (AMEND_ID) FROM MOTOR_POLICY_COVER_DATA WHERE QUOTE_NO = A.QUOTE_NO)",nativeQuery=true)
	String getPremium(String applicationNo);
	
	@Query(value = "SELECT EXCESS_SIGN,EXCESS_PREMIUM FROM HOME_POSITION_MASTER WHERE APPLICATION_NO=?1",nativeQuery=true)
	List<Map<String,Object>> getExcessPremium(String appNo);
	
	@Query(value ="SELECT POLICY_FEE_PERCENT FROM BRANCH_MASTER WHERE BRANCH_CODE=?1",nativeQuery=true)
	String getPolicyfeesPercent(String branchCode);	
	
	@Query(value = "SELECT SUM(PREMIUM) FROM MOTOR_DATA_DETAIL WHERE APPLICATION_NO=?1",nativeQuery=true)
	String getPremium(Long applicationNo);

	@Modifying
	@Transactional
	@Query(value="UPDATE MOTOR_DATA_DETAIL SET INCEPTION_DATE=TO_DATE (?1,'DD/MM/YYYY') WHERE APPLICATION_NO=?2",nativeQuery=true)
	int updateMddPolicyDate(String policyStartDate, String applicatioNo);

	@Modifying
	@Transactional
	@Query(value="UPDATE MOTOR_POLICY_DETAILS SET POLICYSTARTDATE=TO_DATE (?1,'DD/MM/YYYY') WHERE APPLICATIONNO=?2",nativeQuery=true)
	int updateMpdPolicyDate(String policyStartDate, String applicatioNo);
	
	@Modifying
	@Transactional
	@Query(value = "UPDATE HOME_POSITION_MASTER SET INCEPTION_DATE=TO_DATE (?1,'DD/MM/YYYY'),POLICY_TERM=TRUNC(EXPIRY_DATE)-TRUNC(TO_DATE(?1,'DD/MM/YYYY')),BROKER_BRANCH=?2,INSTALLMENT_YN=?3 WHERE APPLICATION_NO=?4",nativeQuery=true)
	int updateHpmPolicyDate(String policyStartDate,String brokerBranch,String installmentYn,String applicatioNo);

	@Modifying
	@Transactional
	@Query(value ="UPDATE HOME_POSITION_MASTER SET APPLICATION_ID='1',LOGIN_ID=?1 WHERE APPLICATION_NO=?2",nativeQuery=true)
	int updateHpmReferalBroker(String loginId, String applicationNo);

	
	@Query(value="SELECT NVL(PAYMENT_REDIR_URL,'') PAYMENT_REDIR_URL FROM PRODUCT_MASTER WHERE PRODUCT_ID='92'",nativeQuery=true)
	String getPaymentUrl();
	
	@Query(value="SELECT NVL(IS_B2C,'N') IS_B2C FROM LOGIN_MASTER WHERE LOGIN_ID=?1",nativeQuery=true)
	String checkIsB2C(String loginId);

	HomePositionMaster findByQuoteNo(Long quoteNo);
	
	@Modifying
	@Transactional
	@Query(value = "UPDATE HOME_POSITION_MASTER SET REFERRAL_DESCRIPTION='',REMARKS='',ADMIN_REFERRAL_STATUS='',SUMMARY_REMARKS='' WHERE APPLICATION_NO=?1",nativeQuery=true)
	int updateReferalRemarks(String applicationNo);

	@Query(value="SELECT * FROM HOME_POSITION_MASTER WHERE QUOTE_NO=?1",nativeQuery=true)
	Map<String,Object> getPaymentStatusByQuoteNo(String quoteNo);		

	@Query(value="Select policy_generate(?,?,?,?) from dual",nativeQuery=true)
	String  getSequence(String quoteNo,String branchCode,String type,String productId);		

	@Query(value="SELECT LOGIN_ID,APPLICATION_ID FROM HOME_POSITION_MASTER WHERE QUOTE_NO=?1",nativeQuery=true)
	Map<String,Object> getApplicationId(String quoteNo);
	
	@Query(value="SELECT CERTIFICATE_NO,VEHICLE_ID FROM motor_data_detail WHERE QUOTE_NO=?1",nativeQuery=true)
	List<Map<String,Object>> getCertificatNo(String quoteNo);
	
	@Modifying
	@Transactional
	@Query(value ="UPDATE motor_data_detail SET CERTIFICATE_NO=?1 WHERE QUOTE_NO=?2 AND VEHICLE_ID=?3 ",nativeQuery=true)
	int updateCertificateNo(String certificateNo,String quoteNo,String vehicleId);
	
	@Query(value="select pd.PAYMENT_TYPE from PAYMENT_DETAIL pd where QUOTE_NO=?1 and pd.MERCHANT_REFERENCE = (select max(pdm.MERCHANT_REFERENCE) from payment_detail pdm where PDM.QUOTE_NO=PD.QUOTE_NO)",nativeQuery=true)
	String getPaymentMode(String quoteNo);
	
	@Query(value = "select TRUNC(to_date(?2,'DD/MM/YYYY')) - TRUNC(to_date(?1,'DD/MM/YYYY')) as POLICY_TERM, TO_CHAR(to_date(?1,'DD/MM/YYYY'),'Q') as QUARTER_ID from dual",nativeQuery=true)
	Map<String,Object> getPolicyTermsAndQuarter(String inceptionDate, String expiryDate);
	
	@Modifying
	@Transactional
	@Query(value="INSERT INTO PAYMENT_PROCESS_DETAIL(SNO,POLICY_NO,QUOTE_NO,TYPE,STATUS,RESPONSE_TIME,REMARKS,LOGIN_ID,ALLOCATED_PERSON) VALUES ((SELECT NVL(MAX(SNO),0)+1 FROM PAYMENT_PROCESS_DETAIL),?1,?2,?3,?4,SYSDATE,?5,?6,?7)", nativeQuery=true)
	int insertPaymentTrans(String policyno,String quoteno,String payType,String status,String remarks,String loginId,String allocatePer);
	
	
	
}
